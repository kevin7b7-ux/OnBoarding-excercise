openapi: 3.0.0
info:
  title: Onboarding Credit API
  description: API for managing credit operations in Fire team Onboarding
  version: 1.0.0

tags:
  - name: Credit
    description: Everything about your Credits
  - name: Monthly Fee
    description: Everything about your Calculate a monthly fee
  - name: Auth
    description: Everything about your Auth

paths:
  /credit:
    get:
      tags:
        - Credit
      security:
        - bearerAuth: []
      summary: Get a list of credits
      responses:
        '200':
          description: A list of credits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Credit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Credit
      security:
        - bearerAuth: []
      summary: Create a new credit
      requestBody:
        description: Credit object to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditRequest'
      responses:
        '201':
          description: Credit created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /credit/{id}:
    put:
      tags:
        - Credit
      security:
        - bearerAuth: []
      summary: Update an existing credit
      parameters:
        - name: id
          in: path
          description: ID of the credit to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated credit object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditRequest'
      responses:
        '200':
          description: Credit updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credit'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /monthly-fee:
    post:
      tags:
        - Monthly Fee
      security:
        - bearerAuth: []
      summary: Calculate monthly fee for a credit
      requestBody:
        description: Calculation request parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateMonthlyFeeRequest'
      responses:
        '200':
          description: Monthly fee calculated successfully
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CalculateMonthlyFeeResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /auth/login:
    post:
      tags:
        - Auth
      summary: Generate a token bearer for access to the resources
      requestBody:
        description: Auth request parameter
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: "token generation successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

components:
  schemas:
    Credit:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        amount:
          type: number
          example: 100000
        owner:
          type: string
          example: "Kevin Cifuentes"
        term:
          type: integer
          example: "5"
        interestRate:
          type: number
          example: 0.02
        monthlyFee:
          type: number
          example: 20033.334

    CreditRequest:
      type: object
      properties:
        amount:
          type: number
          example: 100000
        owner:
          type: string
          example: "Kevin Cifuentes"
        term:
          type: integer
          example: "5"
        interestRate:
          type: number
          example: 0.02
        monthlyFee:
          type: number
          example: 20033.334

    CalculateMonthlyFeeRequest:
      type: object
      properties:
        amount:
          type: number
          example: 100000
        interestRate:
          type: number
          example: 0.02
        term:
          type: integer
          example: 5

    CalculateMonthlyFeeResponse:
      type: number
      example: 20033.334

    Login:
      type: object
      properties:
        email:
          type: string
          example: "myEmail@service.com"

    Token:
      type: object
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

